{"version":3,"sources":["components/Button/index.jsx","util/raster.js","util/logo.js","components/Sketch/index.jsx","components/Checkbox/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","title","onClick","className","e","aidRaster","xDotWidth","xSpaceWidth","x","y","xLogoOffset","yLogoOffset","width","greenColor","blueColor","purpleColor","green","minX","maxX","minY","maxY","diagonal","blueA","blueB","purpleA","purpleB","outlineDraw","pathWidth","pathExtendedWidth","calcStickOutLine","p1","p2","p1c","Paper","Point","this","shortenLine","p2c","topPoints","expandLine","p1r","p1l","bottomPoints","p2r","p2l","drawStickOutLine","prefs","color","pos","calcStickPosition","outline","start","end","scalePoints","multiply","getScale","drawPaths","getRandom","i","length","drawPoints","pathOutline","Path","strokeCap","miterLimit","strokeColor","strokeWidth","pointIndex","add","x1","y1","x2","y2","dist","angle","Math","atan2","sin","cos","smallerLen","xlen","ylen","ratio","sqrt","pow","list","floor","random","randomBetween","min","max","clockwise","getGridPoint","height","drawStickLine","path","startScale","endScale","moveTo","lineTo","SVGSymbol","Symbol","project","importSVG","drawTypo","p","place","posX","posY","svgWidth","bounds","bottomRight","topLeft","gridWidth","scale","currentPos","position","totalWidth","value","calcStick","name","drawGrid","currentX","currentY","Circle","center","radius","fillColor","Sketch","myCanvas","document","getElementById","setup","renderLogo","prevProps","props","hasType","checked","activeLayer","removeChildren","view","size","rectangle","Rectangle","greenStick","purpleStick","blueStick","onEndRender","exportSVG","outerHTML","update","console","log","id","resize","Component","Checkbox","onChange","type","target","htmlFor","lastSVG","App","useState","setHasType","seed","setSeed","svg","blob","Blob","saveAs","saveSVG","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea03204a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst Button = ({ title, onClick }) => (\n  <button className=\"Button\" onClick={e => onClick(e)}>\n    {title}\n  </button>\n);\n\nexport default Button;\n","// svg animation\n// http://codepen.io/PorototypeX/pen/obIsg\n\nimport Paper from \"paper\";\nimport { logoSVG } from \"./logo\";\nimport { debug } from \"../settings\";\n\nexport const aidRaster = {\n  /*\n    Logo Grid for the sticks\n    . . . . .\n    .O.O.O.O.\n    .O.O.O.O.\n    .O.O.O.O.\n    .O.O.O.O.\n    . . . . .\n\n    0 = 13%\n    . = 9.6%\n  */\n\n  xDotWidth: 130,\n  xSpaceWidth: 96,\n\n  // amount of grid elements\n  x: 7, // default for logo\n  y: 7, // default for logo\n\n  xLogoOffset: 3, // the sticks are in the top right corner\n  yLogoOffset: -3, // the sticks are in the top right corner\n\n  width: 600, // the canvas width\n\n  greenColor: \"#558779\", // '#00ff99',\n  blueColor: \"#899f95\", // '#330099',\n  purpleColor: \"#b1a455\", // '#9966cc',\n\n  // the green bar can just be tillt no straight\n  green: {\n    minX: 1,\n    maxX: 2,\n    minY: 3,\n    maxY: 3,\n    diagonal: true\n  },\n\n  //\n  blueA: {\n    minX: 0,\n    maxX: 0,\n    minY: 2,\n    maxY: 2,\n    diagonal: false\n  },\n  blueB: {\n    minX: 1,\n    maxX: 1,\n    minY: 1,\n    maxY: 1,\n    diagonal: true\n  },\n\n  purpleA: {\n    minX: 2,\n    maxX: 2,\n    minY: 2,\n    maxY: 2,\n    diagonal: true\n  },\n  purpleB: {\n    minX: 3,\n    maxX: 3,\n    minY: 0,\n    maxY: 0,\n    diagonal: false\n  },\n\n  outlineDraw: [\n    // L-shape A\n    [\n      [\"p1\", \"p1l\", \"p2l\"],\n      [\"p2\", \"p2r\", \"p1r\"]\n    ],\n\n    // L-shape B\n    [\n      [\"p1\", \"p1r\", \"p2r\"],\n      [\"p2\", \"p2l\", \"p1l\"]\n    ],\n\n    // D-shape A\n    [\n      [\"p1\", \"p1l\", \"p2l\", \"p2\"],\n      [\"p2r\", \"p1r\"]\n    ],\n\n    // D-shape B\n    [\n      [\"p1\", \"p1r\", \"p2r\", \"p2\"],\n      [\"p2l\", \"p1l\"]\n    ],\n\n    // O-shape A\n    [[\"p1\", \"p1l\", \"p2l\", \"p2\", \"p2r\", \"p1r\"]],\n\n    // O-shape B\n    [[\"p1l\", \"p2l\", \"p2\", \"p2r\", \"p1r\", \"p1\"]],\n\n    // O-shape C\n    [[\"p2\", \"p2r\", \"p1r\", \"p1\", \"p1l\", \"p2l\"]],\n\n    // O-shape C\n    [[\"p2r\", \"p1r\", \"p1\", \"p1l\", \"p2l\", \"p2\"]]\n  ],\n\n  /*\n\n           ┌ ─ ─ ┐\n              P1\n           │  ◎  │    ▲\n            ─ ┼ ─     │\n              │       │70\n              │P1C    ▼\n  P1R ◎─ ─ ─ ─◎─ ─ ─ ─◎ P1L\n      │       │       │\n      │       │       │\n      │       │       │\n      │       │       │\n      │◀─────▶│◀─────▶│\n      │  70   │  70   │\n      │       │       │\n      │       │       │\n      │       │       │\n      │       │       │\n      │       │       │\n  P2R ◎─ ─ ─ ─◎─ ─ ─ ─◎ P2L\n              │P2C\n              │\n              │\n           ┌ ─│─ ┐\n              ◎\n           │  P2 │\n            ─ ─ ─\n\n  */\n\n  pathWidth: 98.9949493661, //  pathExtendedWidth/2 * sqrt(2)\n\n  pathExtendedWidth: 140,\n\n  calcStickOutLine: function(p1, p2) {\n    var p1c = new Paper.Point(\n      this.shortenLine(p1.x, p1.y, p2.x, p2.y, this.pathExtendedWidth / 2)\n    );\n    var p2c = new Paper.Point(\n      this.shortenLine(p2.x, p2.y, p1.x, p1.y, this.pathExtendedWidth / 2)\n    );\n\n    var topPoints = this.expandLine(\n      p1c.x,\n      p1c.y,\n      p2c.x,\n      p2c.y,\n      this.pathExtendedWidth / 2\n    );\n    var p1r = new Paper.Point(topPoints[1]);\n    var p1l = new Paper.Point(topPoints[0]);\n\n    var bottomPoints = this.expandLine(\n      p2c.x,\n      p2c.y,\n      p1c.x,\n      p1c.y,\n      this.pathExtendedWidth / 2\n    );\n    var p2r = new Paper.Point(bottomPoints[0]);\n    var p2l = new Paper.Point(bottomPoints[1]);\n\n    // var p1c = new Paper.Point( this.stortenLineDistance(p1.x ,p1.y, p2.x, p2.y, this.pathExtendedWidth/2 ) );\n\n    /*\n\n    */\n    return {\n      p1: p1,\n      p2: p2,\n      p1c: p1c,\n      p2c: p2c,\n      p1r: p1r,\n      p1l: p1l,\n      p2r: p2r,\n      p2l: p2l\n    };\n  },\n\n  drawStickOutLine: function(prefs, color) {\n    // scale\n\n    var pos = this.calcStickPosition(prefs);\n    var outline = this.calcStickOutLine(pos.start, pos.end);\n\n    var scalePoints = {\n      p1: outline.p1.multiply(this.getScale()),\n      p2: outline.p2.multiply(this.getScale()),\n      p1c: outline.p1c.multiply(this.getScale()),\n      p2c: outline.p2c.multiply(this.getScale()),\n      p1r: outline.p1r.multiply(this.getScale()),\n      p1l: outline.p1l.multiply(this.getScale()),\n      p2r: outline.p2r.multiply(this.getScale()),\n      p2l: outline.p2l.multiply(this.getScale())\n    };\n\n    var drawPaths = this.getRandom(this.outlineDraw);\n\n    for (var i = 0; i < drawPaths.length; i++) {\n      var drawPoints = drawPaths[i];\n\n      var pathOutline = new Paper.Path();\n      pathOutline.strokeCap = \"square\";\n      pathOutline.miterLimit = 10;\n      pathOutline.strokeColor = color; //prefs.color;\n      pathOutline.strokeWidth = (this.pathExtendedWidth / 2) * this.getScale();\n\n      for (var pointIndex = 0; pointIndex < drawPoints.length; pointIndex++) {\n        pathOutline.add(scalePoints[drawPoints[pointIndex]]);\n      }\n    }\n\n    if (debug) {\n      var path = new Paper.Path();\n      path.strokeColor = \"black\"; //prefs.color;\n      path.strokeWidth = 2; // this.pathExtendedWidth / 2 * this.getScale();\n\n      path.moveTo(scalePoints.p1);\n      path.lineTo(scalePoints.p2);\n\n      new Paper.Path.Circle({\n        center: scalePoints.p1c,\n        radius: 3,\n        fillColor: \"green\"\n      });\n\n      new Paper.Path.Circle({\n        center: scalePoints.p2c,\n        radius: 3,\n        fillColor: \"red\"\n      });\n\n      new Paper.Path.Circle({\n        center: scalePoints.p1r,\n        radius: 3,\n        fillColor: \"red\"\n      });\n\n      new Paper.Path.Circle({\n        center: scalePoints.p1l,\n        radius: 3,\n        fillColor: \"red\"\n      });\n\n      new Paper.Path.Circle({\n        center: scalePoints.p2r,\n        radius: 3,\n        fillColor: \"green\"\n      });\n\n      new Paper.Path.Circle({\n        center: scalePoints.p2l,\n        radius: 3,\n        fillColor: \"green\"\n      });\n    }\n  },\n\n  // http://stackoverflow.com/questions/17989148/javascript-find-point-on-perpendicular-line-always-the-same-distance-away\n  // http://jsfiddle.net/92jWG/6/\n  expandLine: function(x1, y1, x2, y2, dist) {\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // Draw a normal to the line above\n    return [\n      {\n        x: Math.sin(angle) * dist + x1,\n        y: -Math.cos(angle) * dist + y1\n      },\n\n      {\n        x: -Math.sin(angle) * dist + x1,\n        y: Math.cos(angle) * dist + y1\n      }\n    ];\n  },\n\n  // http://stackoverflow.com/questions/24376951/find-new-coordinates-of-point-on-line\n  // http://jsfiddle.net/3SY8v/\n  shortenLine: function(x1, y1, x2, y2, smallerLen) {\n    /*\n        //if line is vertical\n        if(fromX === toX)\n            return {x: toX, y: toY > fromY ? fromY + pxDistance : fromY - pxDistance};\n\n        //if line is horizontal\n        if(fromY === toY)\n            return {y: toY, x: toX > fromX ? fromX + pxDistance : fromX - pxDistance};\n    */\n\n    // Determine line lengths\n    var xlen = x2 - x1;\n    var ylen = y2 - y1;\n\n    // Determine hypotenuse length\n    var hlen = Math.sqrt(Math.pow(xlen, 2) + Math.pow(ylen, 2));\n\n    // Determine the ratio between they shortened value and the full hypotenuse.\n    var ratio = smallerLen / hlen;\n\n    var smallerXLen = xlen * ratio;\n    var smallerYLen = ylen * ratio;\n\n    // The new X point is the starting x plus the smaller x length.\n    var smallerX = x1 + smallerXLen;\n\n    // Same goes for the new Y.\n    var smallerY = y1 + smallerYLen;\n\n    return [smallerX, smallerY];\n  },\n\n  getRandom: function(list) {\n    return list[Math.floor(Math.random() * list.length)];\n  },\n\n  randomBetween: function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  },\n\n  calcStickPosition: function(prefs) {\n    var start = null;\n    var end = null;\n\n    if (prefs.clockwise) {\n      start = new Paper.Point(\n        this.getGridPoint(prefs.x),\n        this.getGridPoint(prefs.y)\n      );\n      end = new Paper.Point(\n        this.getGridPoint(prefs.x + prefs.width),\n        this.getGridPoint(prefs.y + prefs.height)\n      );\n    } else {\n      start = new Paper.Point(\n        this.getGridPoint(prefs.x + prefs.width),\n        this.getGridPoint(prefs.y)\n      );\n      end = new Paper.Point(\n        this.getGridPoint(prefs.x),\n        this.getGridPoint(prefs.y + prefs.height)\n      );\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  },\n\n  drawStickLine: function(prefs, color) {\n    // Create a Paper.js Path to draw a line into it:\n    var path = new Paper.Path();\n    // Give the stroke a color\n    path.strokeColor = color;\n\n    path.strokeWidth = this.pathWidth * this.getScale();\n\n    var pos = this.calcStickPosition(prefs);\n\n    let startScale = pos.start.multiply(this.getScale());\n    let endScale = pos.end.multiply(this.getScale());\n\n    // Move to start and draw a line from there\n    path.moveTo(startScale);\n\n    // Note the plus operator on Point objects.\n    // PaperScript does that for us, and much more!\n    path.lineTo(endScale);\n  },\n\n  SVGSymbol: function() {\n    var a = new Paper.Symbol(Paper.project.importSVG(logoSVG));\n    return a;\n  },\n\n  drawTypo: function() {\n    var logo = this.SVGSymbol();\n    var p = logo.place();\n\n    var posX = this.getGridPoint(0);\n    var posY = this.getGridPoint(4);\n    posX = posX * this.getScale();\n    posY = posY * this.getScale();\n\n    // p.scale(0.2);\n    //p.scale(0.2, new Paper.Point(0, 0));\n\n    var svgWidth = p.bounds.bottomRight.x - p.bounds.topLeft.x;\n\n    var gridWidth = this.getGridPoint(this.x - 1) - this.getGridPoint(0);\n\n    gridWidth *= this.getScale();\n\n    p.scale((1 / svgWidth) * gridWidth); // 1005px svg width\n\n    var currentPos = p.bounds.topLeft;\n\n    p.position = new Paper.Point(\n      0 - currentPos.x + posX,\n      0 - currentPos.y + posY\n    );\n  },\n\n  getScale: function() {\n    var totalWidth = this.xDotWidth * this.x + this.xSpaceWidth * (this.x + 1);\n    return (this.width / totalWidth) * 1;\n  },\n\n  getGridPoint: function(value) {\n    return (\n      (value + 1) * (this.xSpaceWidth + this.xDotWidth) - this.xDotWidth / 2\n    );\n  },\n\n  calcStick: function(name) {\n    var prefs = this[name];\n\n    var width = this.randomBetween(prefs.minX, prefs.maxX);\n    var height = this.randomBetween(prefs.minY, prefs.maxY);\n\n    var xOffset = this.randomBetween(this.xLogoOffset, this.x - width - 1);\n    var yOffset = this.randomBetween(0, this.y - height - 1 + this.yLogoOffset);\n\n    var clockwise = Math.random() >= 0.5;\n\n    return {\n      x: xOffset,\n      y: yOffset,\n      width: width,\n      height: height,\n      clockwise: clockwise\n    };\n  },\n\n  drawGrid: function() {\n    // Do something with name, you can access regExForName variable\n    // using \"this.regExForName\"\n\n    for (var x = 0; x < this.x; x++) {\n      for (var y = 0; y < this.y; y++) {\n        var currentX = this.getGridPoint(x);\n        var currentY = this.getGridPoint(y);\n\n        new Paper.Path.Circle({\n          center: [currentX * this.getScale(), currentY * this.getScale()],\n          radius: (this.xDotWidth / 2) * this.getScale(),\n          fillColor: \"#555\"\n        });\n      }\n    }\n  }\n};\n","export const logoSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1005 285\">\n\t\t  <title>typo</title>\n\t\t  <rect x=\"540\" y=\"30\" width=\"30\" height=\"30\"/>\n\t\t  <rect x=\"780\" y=\"60\" width=\"30\" height=\"30\"/>\n\t\t  <path d=\"M492.43,60a30,30,0,0,0-21.21,8.79L457.5,82.5l1.35,1.35A21,21,0,0,0,473.7,90H510V60H492.43Z\"/>\n\t\t  <path d=\"M458.85,83.85L457.5,82.5,443.79,96.21A30,30,0,0,0,435,117.43V180h30V98.7A21,21,0,0,0,458.85,83.85Z\"/>\n\t\t  <path d=\"M563.85,83.85L562.5,82.5,548.79,96.21A30,30,0,0,0,540,117.43V180h30V98.7A21,21,0,0,0,563.85,83.85Z\"/>\n\t\t  <path d=\"M30,30v92.57a30,30,0,0,0,8.79,21.21L52.5,157.5l1.35-1.35A21,21,0,0,0,60,141.3V30H30Z\"/>\n\t\t  <path d=\"M68.7,150a21,21,0,0,0-14.85,6.15L52.5,157.5l13.71,13.71A30,30,0,0,0,87.43,180H120V150H68.7Z\"/>\n\t\t  <path d=\"M750,30v92.57a30,30,0,0,0,8.79,21.21L772.5,157.5l1.35-1.35A21,21,0,0,0,780,141.3V30H750Z\"/>\n\t\t  <path d=\"M788.7,150a21,21,0,0,0-14.85,6.15l-1.35,1.35,13.71,13.71A30,30,0,0,0,807.43,180H840V150H788.7Z\"/>\n\t\t  <path d=\"M375,165v51.09a21,21,0,0,0,6.15,14.85l1.35,1.35,13.71-13.71A30,30,0,0,0,405,197.36V165H375Z\"/>\n\t\t  <path d=\"M381.15,230.94a21,21,0,0,0-14.85-6.15H315v30h32.57A30,30,0,0,0,368.79,246l13.71-13.71Z\"/>\n\t\t  <path d=\"M951.15,156.15A21,21,0,0,0,936.3,150H885v30h32.57a30,30,0,0,0,21.21-8.79L952.5,157.5Z\"/>\n\t\t  <path d=\"M878.85,83.85L877.5,82.5,863.79,96.21A30,30,0,0,0,855,117.43V150h30V98.7A21,21,0,0,0,878.85,83.85Z\"/>\n\t\t  <path d=\"M912.43,60a30,30,0,0,0-21.21,8.79L877.5,82.5l1.35,1.35A21,21,0,0,0,893.7,90H945V60H912.43Z\"/>\n\t\t  <path d=\"M945,90v51.3a21,21,0,0,0,6.15,14.85l1.35,1.35,13.71-13.71A30,30,0,0,0,975,122.57V90H945Z\"/>\n\t\t  <path d=\"M231.15,156.15A21,21,0,0,0,216.3,150H165v30h32.57a30,30,0,0,0,21.21-8.79L232.5,157.5Z\"/>\n\t\t  <path d=\"M158.85,83.85L157.5,82.5,143.79,96.21A30,30,0,0,0,135,117.43V150h30V98.7A21,21,0,0,0,158.85,83.85Z\"/>\n\t\t  <path d=\"M192.43,60a30,30,0,0,0-21.21,8.79L157.5,82.5l1.35,1.35A21,21,0,0,0,173.7,90H225V60H192.43Z\"/>\n\t\t  <path d=\"M225,90v51.3a21,21,0,0,0,6.15,14.85l1.35,1.35,13.71-13.71A30,30,0,0,0,255,122.57V90H225Z\"/>\n\t\t  <path d=\"M657.43,60a30,30,0,0,0-21.21,8.79L622.5,82.5l1.35,1.35A21,21,0,0,0,638.7,90H690V60H657.43Z\"/>\n\t\t  <path d=\"M381.15,156.15A21,21,0,0,0,366.3,150H315v30h32.57a30,30,0,0,0,21.21-8.79L382.5,157.5Z\"/>\n\t\t  <path d=\"M308.85,83.85L307.5,82.5,293.79,96.21A30,30,0,0,0,285,117.43V150h30V98.7A21,21,0,0,0,308.85,83.85Z\"/>\n\t\t  <path d=\"M342.43,60a30,30,0,0,0-21.21,8.79L307.5,82.5l1.35,1.35A21,21,0,0,0,323.7,90H375V60H342.43Z\"/>\n\t\t  <path d=\"M375,90v51.3a21,21,0,0,0,6.15,14.85l1.35,1.35,13.71-13.71A30,30,0,0,0,405,122.57V90H375Z\"/>\n\t\t  <path d=\"M623.85,83.85L622.5,82.5,608.79,96.21A30,30,0,0,0,600,117.43V180h30V98.7A21,21,0,0,0,623.85,83.85Z\"/>\n\t\t  <rect x=\"690\" y=\"90\" width=\"30\" height=\"90\"/>\n\t\t</svg>`;\n","import React, { Component } from \"react\";\nimport Paper from \"paper\";\nimport \"./styles.css\";\n\nimport { aidRaster } from \"../../util/raster\";\n\nfunction getRandom(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nexport default class Sketch extends Component {\n  componentDidMount() {\n    // Instantiate the paperScope with the canvas element\n    var myCanvas = document.getElementById(\"myCanvas\");\n    Paper.setup(myCanvas);\n    this.renderLogo();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.renderLogo();\n  }\n\n  renderLogo() {\n    if (this.props.hasType) {\n      aidRaster.x = 7;\n      aidRaster.y = 7;\n      aidRaster.xLogoOffset = 3;\n      aidRaster.yLogoOffset = -3;\n      this.checked = true;\n    } else {\n      aidRaster.x = 4;\n      aidRaster.y = 4;\n      aidRaster.xLogoOffset = 0;\n      aidRaster.yLogoOffset = 0;\n      this.checked = false;\n    }\n\n    Paper.project.activeLayer.removeChildren();\n\n    aidRaster.width = Paper.view.size.width;\n\n    // full size bg\n    var rectangle = new Paper.Rectangle(\n      new Paper.Point(0, 0),\n      new Paper.Point(aidRaster.width, aidRaster.width)\n    );\n    var path = new Paper.Path.Rectangle(rectangle);\n    path.fillColor = \"#ffffff\";\n\n    // aidRaster.drawGrid();\n\n    var greenStick = aidRaster.calcStick(\"green\");\n    var purpleStick = aidRaster.calcStick(getRandom([\"purpleA\", \"purpleB\"]));\n    var blueStick = aidRaster.calcStick(getRandom([\"blueA\", \"blueB\"]));\n\n    // draw lines\n    aidRaster.drawStickLine(greenStick, aidRaster.greenColor);\n    aidRaster.drawStickLine(purpleStick, aidRaster.purpleColor);\n    aidRaster.drawStickLine(blueStick, aidRaster.blueColor);\n\n    // draw outline\n    aidRaster.drawStickOutLine(greenStick, aidRaster.greenColor);\n    aidRaster.drawStickOutLine(purpleStick, aidRaster.purpleColor);\n    aidRaster.drawStickOutLine(blueStick, aidRaster.blueColor);\n\n    if (aidRaster.xLogoOffset !== 0) {\n      aidRaster.drawTypo();\n    }\n\n    if (this.props.onEndRender) {\n      this.props.onEndRender(Paper.project.exportSVG().outerHTML);\n    }\n\n    Paper.view.update();\n\n    console.log(\"run logo end\");\n  }\n\n  render() {\n    return <canvas id=\"myCanvas\" resize=\"true\" width=\"600\" height=\"600\" />;\n  }\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Checkbox = ({ checked, onChange }) => (\n  <div className=\"Checkbox\">\n    <input\n      id=\"typoon\"\n      type=\"checkbox\"\n      name=\"Checkbox\"\n      className=\"Checkbox__checkbox\"\n      checked={checked}\n      onChange={e => onChange(e.target.checked)}\n    />\n    <label className=\"Checkbox__label\" htmlFor=\"typoon\">\n      <span className=\"Checkbox__inner\"></span>\n      <span className=\"Checkbox__switch\"></span>\n    </label>\n  </div>\n);\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\n\nimport \"./App.css\";\n\nimport Button from \"./components/Button\";\nimport Sketch from \"./components/Sketch\";\nimport Checkbox from \"./components/Checkbox\";\n\nlet lastSVG = \"\";\n\nfunction saveSVG(svg) {\n  var blob = new Blob([svg], {\n    type: \"data:image/svg+xml;charset=utf-8\"\n  });\n  saveAs(blob, \"logo.svg\");\n}\n\nfunction App() {\n  const [hasType, setHasType] = useState(true);\n  const [seed, setSeed] = useState(1); // not implemented yet\n\n  return (\n    <div className=\"App\">\n      <div id=\"function\">\n        <Checkbox checked={hasType} onChange={setHasType} />\n        <Button title=\"New Logo\" onClick={e => setSeed(seed + 1)} />\n        <Button title=\"Save Logo (SVG)\" onClick={e => saveSVG(lastSVG)} />\n      </div>\n\n      <div id=\"logo\">\n        <Sketch\n          hasType={hasType}\n          seed={seed}\n          onEndRender={svg => (lastSVG = svg)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}